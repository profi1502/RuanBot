import asyncio
from datetime import datetime

import pytz
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery, Message, ReplyKeyboardRemove
from asyncpg import UniqueViolationError

from keyboards.default import main_keyboard
from keyboards.inline.bonus import change_card, cancel
from keyboards.inline.callback_datas import post_callback
from loader import dp, bot
from states.BonuSystem import Bonus
from utils.db_api.db_commands import add_bonus_card, get_bonus_card
from utils.misc.ruan import Ruan


@dp.callback_query_handler(post_callback.filter(action='add_replace_card'))
async def enter_card(call: CallbackQuery):
    await call.message.delete()
    await call.message.answer('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –±–æ–Ω—É—Å–Ω–æ—ó –∫–∞—Ä—Ç–∫–∏.\n\n–ü—Ä–∏–∫–ª–∞–¥: <code>2398230000000</code>',
                              reply_markup=cancel.keyboard)

    await Bonus.EnterCardWithoutGT.set()


@dp.message_handler(state=Bonus.EnterCardWithoutGT, content_types='text')
async def register_card(message: Message, state: FSMContext):
    await message.answer(text='–ü–æ—á–∞—Ç–æ–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è', reply_markup=ReplyKeyboardRemove())
    ruan = Ruan(ruan_url='http://ruan.ddns.net', ruan_user='TelegramBot', ruan_password='TelegramBot')

    chat_id = str(message.from_user.id)
    card_list = await get_bonus_card(chat_id)
    new_card = message.text
    card: str
    new_card: str

    await message.bot.send_message(chat_id=chat_id, text='–ô–¥–µ –æ–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö')
    await bot.send_chat_action(chat_id=chat_id, action="upload_document")

    # —Ä–∞–≤–Ω–æ –¥–≤—É–º –ø–æ—Ç–æ–º—É –ø–æ –≤—ã–¥–∞–µ—Ç –∫–∞–≤—ã—á–∫–∏ ""
    if len(ruan.check_card(new_card)) == 2:
        await message.answer('–ù–∞–∂–∞–ª—å –¥–∞–Ω–∞ –∫–∞—Ä—Ç–∫–∞ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∞. –Ø–∫—â–æ —É –í–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –ø–∏—Ç–∞–Ω–Ω—è, '
                             '–±—É–¥—å –ª–∞—Å–∫–∞ –Ω–∞–ø–∏—à—ñ—Ç—å –Ω–∞–º –Ω–∞ –∞–¥—Ä–µ—Å—É info@apteka-rua.com.ua',
                             reply_markup=main_keyboard)
        await state.finish()

    else:
        await state.update_data(card=new_card)

        if len(new_card) == 13:
            if new_card.startswith('239823'):

                # –µ—Å–ª–∏ —é–∑–µ—Ä –≤–≤–µ–ª –∫–∞—Ä—Ç—É, –∫–æ—Ç–æ—Ä–∞—è —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ —Ç–æ –º—ã –µ–≥–æ —à–ª–µ–º –Ω–∞—Ñ–∏–≥
                if new_card not in card_list:

                    if len(card_list) != 0:
                        await message.answer(
                            f'–í–∏ –±–∞–∂–∞—î—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ –∫–∞—Ä—Ç–∫—É, —è–∫—É –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞–ª–∏ —Ä–∞–Ω—ñ—à–µ <code>{card_list[0][0]}</code>? '
                            f'–ù–æ–º–µ—Ä –∫–∞—Ä—Ç–∏ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –±–∞–ª—ñ–≤ –±—É–¥–µ –∑–º—ñ–Ω–µ–Ω–∏–π –Ω–∞ <code>{new_card}</code>.',
                            reply_markup=change_card.keyboard_without_gt)

                    else:
                        date = datetime.now().date()
                        try:
                            await add_bonus_card(card=new_card, date=date, chat_id=chat_id)
                            await message.answer('–í–∞—à–∞ –∫–∞—Ä—Ç–∫–∞ —É—Å–ø—ñ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞üòâ',
                                                 reply_markup=main_keyboard)
                            await state.finish()
                        except UniqueViolationError:
                            await message.answer('–í–∫–∞–∑–∞–Ω–∞ –∫–∞—Ä—Ç–∫–∞ –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∞üòï', reply_markup=main_keyboard)
                            await state.finish()

                else:
                    await message.answer('–í–∫–∞–∑–∞–Ω–∞ –∫–∞—Ä—Ç–∫–∞ –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∞üòï', reply_markup=main_keyboard)
                    await state.finish()

            else:
                await message.answer(
                    '–ù–∞–∂–∞–ª—å –í–∞—à–∞ –∫–∞—Ä—Ç–∫–∞ - –Ω–µ –±–æ–Ω—É—Å–Ω–∞. –ë–æ–Ω—É—Å–Ω–∞ –∫–∞—Ä—Ç–∫–∞ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ —Ü–∏—Ñ—Ä 239823.....\n\n'
                    '–°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:', reply_markup=cancel.keyboard)
        else:
            await message.answer('–ù–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏ –ø–æ–≤–∏–Ω–µ–Ω —Å–∫–ª–∞–¥–∞—Ç–∏—Å—è –∑ 13 —Ü–∏—Ñ—Ä.....\n\n'
                                 '–°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:', reply_markup=cancel.keyboard)
