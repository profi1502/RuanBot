import asyncio
from datetime import datetime

import pytz
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery, Message
from asyncpg import UniqueViolationError

from Emoji import emoji
from data.config import admins
from keyboards.default import main_keyboard
from keyboards.inline.bonus import rg_card
from keyboards.inline.bonus.keyboard import bonus_gift_keyboard, bonus_keyboard
from keyboards.inline.callback_datas import post_callback
from loader import dp
from utils.db_api.db_commands import update_CardsAndChatID, add_statistic, get_bonus_card
from utils.db_api.google_tables import bonus_data
from utils.db_api.google_tables.bonus_data import getChatID, get_user_card, checkParameter
from utils.db_api.models import MailingBefore17, MailingAfter17, Bonuses, BonusCards, CheckBalance
from utils.misc.ruan import Ruan


@dp.message_handler(text=f'–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ –º–µ–Ω—é{emoji.left_hand}', state='*')
async def show_contacts(message: Message, state: FSMContext):
    await message.edit_text(f'–û–±–∏—Ä–∞–π—Ç–µ{emoji.arrow_down}', reply_markup=main_keyboard)
    await state.finish()


@dp.callback_query_handler(post_callback.filter(action=f'back_to_bonuses'))
async def show_contacts(call: CallbackQuery):
    await call.message.edit_text(f'–î–ª—è —Ç–æ–≥–æ, —â–æ–± –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –±–æ–Ω—É—Å–∏, –í–∞–º –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –º–∞—Ç–∏ –±–æ–Ω—É—Å–Ω—É –∫–∞—Ä—Ç–∫—É. '
                                 '–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ –ø—Ä–æ —Ç–µ, –¥–µ –º–æ–∂–ª–∏–≤–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –±–æ–Ω—É—Å–Ω—É –∫–∞—Ä—Ç–∫—É –∑–∞ '
                                 '<a href="https://apteka-ruan.com.ua/bonusnaya-programma">–ø–æ—Å–∏–ª–∞–Ω–Ω—è–º</a>.\n\n',
                                 reply_markup=bonus_keyboard, disable_web_page_preview=True)


async def set_timer_for_mail(action, chat_id, card):
    tz_kiev = pytz.timezone('Europe/Kiev')
    time_kiev = datetime.now(tz_kiev)

    await bonus_data.update(card=card, chat_id=chat_id)

    try:
        if int(time_kiev.hour) >= 17:
            await action(table_name=MailingAfter17, card=card, chat_id=chat_id)
        else:
            await action(table_name=MailingBefore17, card=card, chat_id=chat_id)
    except UniqueViolationError:
        print(None)


@dp.callback_query_handler(post_callback.filter(action='yes'), state='*')
async def update_card_yes(call: CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        pass

    await set_timer_for_mail(action=update_CardsAndChatID, chat_id=str(call.from_user.id), card=data['card'])

    await call.message.delete()
    await call.message.answer('–î—è–∫—É—î–º–æ –∑–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é. –ë–æ–Ω—É—Å–∏ –±—É–¥—É—Ç—å –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω—ñ –Ω–∞ –∫–∞—Ä—Ç–∫—É '
                              f'{data["card"]} –ø—Ä–æ—Ç—è–≥–æ–º –¥–æ–±–∏, –í–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—èüòâ', reply_markup=main_keyboard)
    await state.finish()


@dp.callback_query_handler(post_callback.filter(action='yes_without_gt'), state='*')
async def update_card_yes(call: CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        pass
    try:

        await update_CardsAndChatID(table_name=BonusCards, chat_id=str(call.from_user.id), card=data['card'])
        await call.message.delete()
        await call.message.answer('–í–∏ —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–∏–ª–∏ –∫–∞—Ä—Ç—Éüòâ', reply_markup=main_keyboard)
        await state.finish()

    except UniqueViolationError:
        await call.message.delete()
        await call.message.answer('–í–∫–∞–∑–∞–Ω–∞ –∫–∞—Ä—Ç–∫–∞ –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∞üòï', reply_markup=main_keyboard)
        await state.finish()


@dp.callback_query_handler(post_callback.filter(action='no'), state='*')
async def update_card_no(call: CallbackQuery, state: FSMContext):
    await call.message.delete()
    await call.message.answer(f'–û–±–∏—Ä–∞–π—Ç–µ{emoji.arrow_down}', reply_markup=main_keyboard)
    await state.finish()


@dp.callback_query_handler(post_callback.filter(action='check_bonus'))
async def check_bonus(call: CallbackQuery):
    await call.message.delete()
    chat_id = str(call.from_user.id)
    if chat_id in await getChatID():
        if await checkParameter(chat_id) == 'Y':
            await call.message.answer(
                f'–ù–∞ –≤–∞—à—É –∫–∞—Ä—Ç–∫—É - <code>{await get_user_card(chat_id)}</code> –≤–∂–µ –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ –±—É–ª–æ 50 –±–æ–Ω—É—Å—ñ–≤.',
                reply_markup=main_keyboard)
        else:
            await call.message.answer(
                f'–í–∞—à–∞ –∫–∞—Ä—Ç–∫–∞ - <code>{await get_user_card(chat_id)}</code> –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∞. –ë–æ–Ω—É—Å–∏ –±—É–¥—É—Ç—å –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω—ñ –ø—Ä–æ—Ç—è–≥–æ–º –¥–æ–±–∏.',
                reply_markup=main_keyboard)
    else:
        await call.message.answer('–í–∞—à–∞ –∫–∞—Ä—Ç–∫–∞ –Ω–µ –∑–∞—Ä—î—î—Å—Ç—Ä–æ–≤–∞–Ω–∞.',
                                  reply_markup=rg_card.keyboard)


@dp.callback_query_handler(post_callback.filter(action='check_balance'))
async def check_balance(callback: CallbackQuery):
    await callback.answer()
    chat_id = str(callback.from_user.id)
    card_list = await get_bonus_card(chat_id)
    ruan = Ruan(ruan_url='http://ruan.ddns.net', ruan_user='TelegramBot', ruan_password='TelegramBot')

    if callback.from_user.id in admins:
        print(None)
    else:
        date = datetime.now().date()
        await add_statistic(CheckBalance, date, callback.from_user.id)

    if len(card_list) != 0:
        await callback.message.delete()
        await callback.message.answer(
            f'–ú–æ—ó –±–æ–Ω—É—Å–∏: <code>{ruan.check_balance(card_list[0][0])}</code> –±–∞–ª—ñ–≤',
            reply_markup=main_keyboard)
    else:
        await callback.message.edit_text('–î–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –±–∞–ª—ñ–≤ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –¥–æ–¥–∞—Ç–∏ –∫–∞—Ä—Ç–∫—É!',
                                         reply_markup=rg_card.keyboard_without_gt)


@dp.callback_query_handler(post_callback.filter(action='gift_bonus'))
async def gift_balance(callback: CallbackQuery):
    await callback.answer()
    if callback.from_user.id in admins:
        print(None)
    else:
        date = datetime.now().date()
        await add_statistic(Bonuses, date, callback.from_user.id)

    await callback.message.edit_text(f'–î–ª—è —Ç–æ–≥–æ, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –±–æ–Ω—É—Å–∏, –í–∞–º –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –º–∞—Ç–∏ –±–æ–Ω—É—Å–Ω—É –∫–∞—Ä—Ç–∫—É. '
                                     '–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ –ø—Ä–æ —Ç–µ, –¥–µ –º–æ–∂–ª–∏–≤–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –±–æ–Ω—É—Å–Ω—É –∫–∞—Ä—Ç–∫—É –∑–∞ '
                                     '<a href="https://apteka-ruan.com.ua/help/programma-loyalnosti/bonusnaya-programma/">–ø–æ—Å–∏–ª–∞–Ω–Ω—è–º</a>.\n\n'
                                     f'{emoji.warning}50 –±–æ–Ω—É—Å–Ω–∏—Ö –±–∞–ª—ñ–≤ –±—É–¥–µ –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ –Ω–∞ –≤–∫–∞–∑–∞–Ω—É –∫–∞—Ä—Ç–∫—É –ø—Ä–æ—Ç—è–≥–æ–º –¥–æ–±–∏. '
                                     f'<b>–í–∞–∂–ª–∏–≤–æ!</b> –ë–æ–Ω—É—Å–∏ –Ω–∞—Ä–∞—Ö–æ–≤—É—é—Ç—å—Å—è –æ–¥–∏–Ω —Ä–∞–∑!',
                                     reply_markup=bonus_gift_keyboard, disable_web_page_preview=True)
